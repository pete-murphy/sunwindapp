import React, { Component } from "react"
import { BrowserRouter as Router, Route, NavLink } from "react-router-dom"
import styled from "styled-components"

import ClientForm from "./components/ClientForm"
import SystemForm from "./components/SystemForm"

const Container = styled.div`
  display: grid;
  grid-template-columns: 4fr 1fr;
  width: 100vw;
  height: 100vh;
  & > * {
    padding: 1rem;
    overflow: scroll;
  }
`
const Main = styled.div``

const Sidebar = styled.div`
  background-color: var(--night);
`

export const StyledNavLink = styled(NavLink)`
  text-decoration: none;
  color: var(--peach);
  transition: 1s all;
  &.active {
    color: var(--haus);
  }
`

const defaultTitle = "SunWind App"

class App extends Component {
  constructor() {
    super()

    this.handleClientChange = this.handleClientChange.bind(this)
    this.handleClientToggle = this.handleClientToggle.bind(this)
    this.state = {
      client: {
        name: {
          last: "",
          first: ""
        },
        address: {
          line1: "",
          line2: "",
          town: "",
          zip: ""
        },
        financialInfo: {
          sRECMarketSector: 1,
          isCommercial: true,
          taxRate: 0.35
        },
        usageData: Array(12).fill(0),
        incentivePrograms: {
          fITC: true,
          sMART: false,
          sREC: true,
          mACRS: true,
          nantucketSolar: false,
          netMetering: true
        }
      },
      system: {
        arrays: [
          {
            moduleAmount: 120,
            moduleCapacity: 310,
            tilt: 45,
            azimuth: 156,
            arrayType: 1,
            costPerWatt: 0,
            losses: 14,
            // Output will be generated by PVWatts fetch
            output: []
          }
        ],
        hasError: true,
        hasSubmitted: false,
        totalSystemCost: 0
      }
    }
  }

  handleClientChange(value, name, category) {
    const client = { ...this.state.client }
    client[category][name] = value
    this.setState(({ client }) => client)
  }

  handleClientToggle(name, category) {
    const client = { ...this.state.client }
    client[category][name] = !client[category][name]
    this.setState(({ client }) => client)
  }

  componentDidMount() {
    document.title = defaultTitle
  }

  componentDidUpdate() {
    const lastName = this.state.client.name.last
    const address = this.state.client.address.line1
    lastName !== ""
      ? (document.title = lastName + (address !== "" ? `, ${address}` : ""))
      : (document.title = defaultTitle)
  }

  render() {
    return (
      <Router>
        <Container>
          <Main>
            <Route
              path="/client"
              exact
              render={() => (
                <ClientForm
                  {...this.state.client}
                  handleChange={this.handleClientChange}
                  handleToggle={this.handleClientToggle}
                />
              )}
            />
            <Route
              path="/system"
              exact
              render={() => (
                <SystemForm
                  {...this.state.client}
                  handleChange={this.handleClientChange}
                  handleToggle={this.handleClientToggle}
                />
              )}
            />
          </Main>
          <Sidebar>
            <h2>Sidebar</h2>
          </Sidebar>
        </Container>
      </Router>
    )
  }
}

export default App
